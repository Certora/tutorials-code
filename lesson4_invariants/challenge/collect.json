{"original": "https://prover.certora.com/output/98279/212fdbe452bf439bbf543df1071bf6bc?anonymousKey=8cf8a789a770e2cf595ff60037554da5c7cbb30d", "mutants": [{"gambit_mutant": {"filename": "gambit_out/mutants/1/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/1", "id": "1", "diff": "--- original\n+++ mutant\n@@ -51,7 +51,8 @@\n     uint256 _parentFrac,\n     uint256 _joiningFee\n   ) {\n-    require(_parentFrac > 0, \"Must be non-zero\");\n+    /// DeleteExpressionMutation(`require(_parentFrac > 0, \"Must be non-zero\")` |==> `assert(true)`) of: `require(_parentFrac > 0, \"Must be non-zero\");`\n+    assert(true);\n     parentFrac = _parentFrac;\n     joiningFee = _joiningFee;\n     \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/c7a1cad7729b46ff816d35719da6eaf5?anonymousKey=2b31bc827e463affa1297f3fb0da586603c669da", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_939/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/c7a1cad7729b46ff816d35719da6eaf5?anonymousKey=2b31bc827e463affa1297f3fb0da586603c669da"}, {"gambit_mutant": {"filename": "gambit_out/mutants/2/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/2", "id": "2", "diff": "--- original\n+++ mutant\n@@ -51,7 +51,8 @@\n     uint256 _parentFrac,\n     uint256 _joiningFee\n   ) {\n-    require(_parentFrac > 0, \"Must be non-zero\");\n+    /// RequireMutation(`_parentFrac > 0` |==> `true`) of: `require(_parentFrac > 0, \"Must be non-zero\");`\n+    require(true, \"Must be non-zero\");\n     parentFrac = _parentFrac;\n     joiningFee = _joiningFee;\n     \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/2cfe97506a324df892a52f8559d4269c?anonymousKey=5ba4c24e4439760c56561c0f427f9fe55e2d5cdb", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_14_332/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/2cfe97506a324df892a52f8559d4269c?anonymousKey=5ba4c24e4439760c56561c0f427f9fe55e2d5cdb"}, {"gambit_mutant": {"filename": "gambit_out/mutants/3/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/3", "id": "3", "diff": "--- original\n+++ mutant\n@@ -51,7 +51,8 @@\n     uint256 _parentFrac,\n     uint256 _joiningFee\n   ) {\n-    require(_parentFrac > 0, \"Must be non-zero\");\n+    /// RequireMutation(`_parentFrac > 0` |==> `false`) of: `require(_parentFrac > 0, \"Must be non-zero\");`\n+    require(false, \"Must be non-zero\");\n     parentFrac = _parentFrac;\n     joiningFee = _joiningFee;\n     \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/cf9f373ab61141bd9f59ae1c98fdfe91?anonymousKey=33ca3d55a97aa08fbc3214b76014e4b25f755a99", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_20_648/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/cf9f373ab61141bd9f59ae1c98fdfe91?anonymousKey=33ca3d55a97aa08fbc3214b76014e4b25f755a99"}, {"gambit_mutant": {"filename": "gambit_out/mutants/4/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/4", "id": "4", "diff": "--- original\n+++ mutant\n@@ -51,7 +51,8 @@\n     uint256 _parentFrac,\n     uint256 _joiningFee\n   ) {\n-    require(_parentFrac > 0, \"Must be non-zero\");\n+    /// SwapArgumentsOperatorMutation(`_parentFrac > 0` |==> `0 > _parentFrac`) of: `require(_parentFrac > 0, \"Must be non-zero\");`\n+    require(0 > _parentFrac, \"Must be non-zero\");\n     parentFrac = _parentFrac;\n     joiningFee = _joiningFee;\n     \n", "description": "SwapArgumentsOperatorMutation"}, "link": "https://prover.certora.com/jobStatus/98279/729ca7eb88004372881b2fb948f61c9f?anonymousKey=156b05f4070ed94f69b152204fe0e2aabf7d1dcb", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_502/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/729ca7eb88004372881b2fb948f61c9f?anonymousKey=156b05f4070ed94f69b152204fe0e2aabf7d1dcb"}, {"gambit_mutant": {"filename": "gambit_out/mutants/5/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/5", "id": "5", "diff": "--- original\n+++ mutant\n@@ -52,7 +52,8 @@\n     uint256 _joiningFee\n   ) {\n     require(_parentFrac > 0, \"Must be non-zero\");\n-    parentFrac = _parentFrac;\n+    /// AssignmentMutation(`_parentFrac` |==> `0`) of: `parentFrac = _parentFrac;`\n+    parentFrac = 0;\n     joiningFee = _joiningFee;\n     \n     // Set the root\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/145cb99fcee744f593122c829c6f0b39?anonymousKey=c013c5b9b01aa2472d9beb60083b461690a145e6", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_14_660/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/145cb99fcee744f593122c829c6f0b39?anonymousKey=c013c5b9b01aa2472d9beb60083b461690a145e6"}, {"gambit_mutant": {"filename": "gambit_out/mutants/6/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/6", "id": "6", "diff": "--- original\n+++ mutant\n@@ -52,7 +52,8 @@\n     uint256 _joiningFee\n   ) {\n     require(_parentFrac > 0, \"Must be non-zero\");\n-    parentFrac = _parentFrac;\n+    /// AssignmentMutation(`_parentFrac` |==> `1`) of: `parentFrac = _parentFrac;`\n+    parentFrac = 1;\n     joiningFee = _joiningFee;\n     \n     // Set the root\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/ca1ea7763dac4822bd1c617b3ed67a60?anonymousKey=0434433929c6e706bb6235f90cb2c50103b99499", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_20_994/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/ca1ea7763dac4822bd1c617b3ed67a60?anonymousKey=0434433929c6e706bb6235f90cb2c50103b99499"}, {"gambit_mutant": {"filename": "gambit_out/mutants/7/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/7", "id": "7", "diff": "--- original\n+++ mutant\n@@ -53,7 +53,8 @@\n   ) {\n     require(_parentFrac > 0, \"Must be non-zero\");\n     parentFrac = _parentFrac;\n-    joiningFee = _joiningFee;\n+    /// AssignmentMutation(`_joiningFee` |==> `0`) of: `joiningFee = _joiningFee;`\n+    joiningFee = 0;\n     \n     // Set the root\n     require(msg.sender != address(0), \"Address zero cannot be a member\");\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/15a09f19d07041818154b9243016f8d8?anonymousKey=30632ee71954d722edd36f713693093fcef6d525", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_097/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/15a09f19d07041818154b9243016f8d8?anonymousKey=30632ee71954d722edd36f713693093fcef6d525"}, {"gambit_mutant": {"filename": "gambit_out/mutants/8/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/8", "id": "8", "diff": "--- original\n+++ mutant\n@@ -53,7 +53,8 @@\n   ) {\n     require(_parentFrac > 0, \"Must be non-zero\");\n     parentFrac = _parentFrac;\n-    joiningFee = _joiningFee;\n+    /// AssignmentMutation(`_joiningFee` |==> `1`) of: `joiningFee = _joiningFee;`\n+    joiningFee = 1;\n     \n     // Set the root\n     require(msg.sender != address(0), \"Address zero cannot be a member\");\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/d522937f390442c7bfba2bbcd0508a9b?anonymousKey=e3756341a4e70593060e49d5601de4ee8b1bdfe7", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_14_633/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/d522937f390442c7bfba2bbcd0508a9b?anonymousKey=e3756341a4e70593060e49d5601de4ee8b1bdfe7"}, {"gambit_mutant": {"filename": "gambit_out/mutants/9/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/9", "id": "9", "diff": "--- original\n+++ mutant\n@@ -56,7 +56,8 @@\n     joiningFee = _joiningFee;\n     \n     // Set the root\n-    require(msg.sender != address(0), \"Address zero cannot be a member\");\n+    /// DeleteExpressionMutation(`require(msg.sender != address(0), \"Address zero cannot be a member\")` |==> `assert(true)`) of: `require(msg.sender != address(0), \"Address zero cannot be a member\");`\n+    assert(true);\n     _root = msg.sender;\n     Member storage memberData = members[msg.sender];\n     memberData.exists = true;\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/cdee49d185f44315aad2e269b71fb983?anonymousKey=1ae193bc376fbaf6592571068370ee0fce660b0e", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_19_752/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/cdee49d185f44315aad2e269b71fb983?anonymousKey=1ae193bc376fbaf6592571068370ee0fce660b0e"}, {"gambit_mutant": {"filename": "gambit_out/mutants/10/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/10", "id": "10", "diff": "--- original\n+++ mutant\n@@ -56,7 +56,8 @@\n     joiningFee = _joiningFee;\n     \n     // Set the root\n-    require(msg.sender != address(0), \"Address zero cannot be a member\");\n+    /// RequireMutation(`msg.sender != address(0)` |==> `true`) of: `require(msg.sender != address(0), \"Address zero cannot be a member\");`\n+    require(true, \"Address zero cannot be a member\");\n     _root = msg.sender;\n     Member storage memberData = members[msg.sender];\n     memberData.exists = true;\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/07f42eb18099481996484d2dfe127d31?anonymousKey=3c756bf67b82e395cd32c69982c7bb68c415ab34", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_584/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/07f42eb18099481996484d2dfe127d31?anonymousKey=3c756bf67b82e395cd32c69982c7bb68c415ab34"}, {"gambit_mutant": {"filename": "gambit_out/mutants/11/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/11", "id": "11", "diff": "--- original\n+++ mutant\n@@ -56,7 +56,8 @@\n     joiningFee = _joiningFee;\n     \n     // Set the root\n-    require(msg.sender != address(0), \"Address zero cannot be a member\");\n+    /// RequireMutation(`msg.sender != address(0)` |==> `false`) of: `require(msg.sender != address(0), \"Address zero cannot be a member\");`\n+    require(false, \"Address zero cannot be a member\");\n     _root = msg.sender;\n     Member storage memberData = members[msg.sender];\n     memberData.exists = true;\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/dc58339ac90e433eaf734552e5d37f01?anonymousKey=6c5b1cbbbdfd67ed1a7209f661f183d470cbd57f", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_13_320/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/dc58339ac90e433eaf734552e5d37f01?anonymousKey=6c5b1cbbbdfd67ed1a7209f661f183d470cbd57f"}, {"gambit_mutant": {"filename": "gambit_out/mutants/12/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/12", "id": "12", "diff": "--- original\n+++ mutant\n@@ -57,7 +57,8 @@\n     \n     // Set the root\n     require(msg.sender != address(0), \"Address zero cannot be a member\");\n-    _root = msg.sender;\n+    /// DeleteExpressionMutation(`_root = msg.sender` |==> `assert(true)`) of: `_root = msg.sender;`\n+    assert(true);\n     Member storage memberData = members[msg.sender];\n     memberData.exists = true;\n   }\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/6362e893c556412185af571954e6759b?anonymousKey=0288b38a7dad6db43d0e3ae493f88ec7c67973d3", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_18_144/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/6362e893c556412185af571954e6759b?anonymousKey=0288b38a7dad6db43d0e3ae493f88ec7c67973d3"}, {"gambit_mutant": {"filename": "gambit_out/mutants/13/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/13", "id": "13", "diff": "--- original\n+++ mutant\n@@ -59,7 +59,8 @@\n     require(msg.sender != address(0), \"Address zero cannot be a member\");\n     _root = msg.sender;\n     Member storage memberData = members[msg.sender];\n-    memberData.exists = true;\n+    /// DeleteExpressionMutation(`memberData.exists = true` |==> `assert(true)`) of: `memberData.exists = true;`\n+    assert(true);\n   }\n \n   modifier memebersOnly() {\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/fba2d1c23e7d4b169b548f805dde74b4?anonymousKey=0fc56273522f92758ea94009b6ab03ee30d2dd5c", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_460/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/fba2d1c23e7d4b169b548f805dde74b4?anonymousKey=0fc56273522f92758ea94009b6ab03ee30d2dd5c"}, {"gambit_mutant": {"filename": "gambit_out/mutants/14/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/14", "id": "14", "diff": "--- original\n+++ mutant\n@@ -59,7 +59,8 @@\n     require(msg.sender != address(0), \"Address zero cannot be a member\");\n     _root = msg.sender;\n     Member storage memberData = members[msg.sender];\n-    memberData.exists = true;\n+    /// AssignmentMutation(`true` |==> `false`) of: `memberData.exists = true;`\n+    memberData.exists = false;\n   }\n \n   modifier memebersOnly() {\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/40248f7111f944f6b36ef91999eed27e?anonymousKey=220d260eac3ec55c680ea64ccbad20d4d1872def", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_14_734/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/40248f7111f944f6b36ef91999eed27e?anonymousKey=220d260eac3ec55c680ea64ccbad20d4d1872def"}, {"gambit_mutant": {"filename": "gambit_out/mutants/15/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/15", "id": "15", "diff": "--- original\n+++ mutant\n@@ -63,7 +63,8 @@\n   }\n \n   modifier memebersOnly() {\n-    require(contains(msg.sender), \"Not a member\");\n+    /// DeleteExpressionMutation(`require(contains(msg.sender), \"Not a member\")` |==> `assert(true)`) of: `require(contains(msg.sender), \"Not a member\");`\n+    assert(true);\n     _;\n   }\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5eee4baed6d24b7696a64beb959842c7?anonymousKey=de8d4441189d30a50e35109cc135a3ad49f8eaea", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_20_373/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5eee4baed6d24b7696a64beb959842c7?anonymousKey=de8d4441189d30a50e35109cc135a3ad49f8eaea"}, {"gambit_mutant": {"filename": "gambit_out/mutants/16/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/16", "id": "16", "diff": "--- original\n+++ mutant\n@@ -63,7 +63,8 @@\n   }\n \n   modifier memebersOnly() {\n-    require(contains(msg.sender), \"Not a member\");\n+    /// RequireMutation(`contains(msg.sender)` |==> `true`) of: `require(contains(msg.sender), \"Not a member\");`\n+    require(true, \"Not a member\");\n     _;\n   }\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/f0b90085da124fcfb79829c702de04f3?anonymousKey=de21cf3273d4745385a7d5556d8f7c1bb9cba3d3", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_334/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/f0b90085da124fcfb79829c702de04f3?anonymousKey=de21cf3273d4745385a7d5556d8f7c1bb9cba3d3"}, {"gambit_mutant": {"filename": "gambit_out/mutants/17/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/17", "id": "17", "diff": "--- original\n+++ mutant\n@@ -63,7 +63,8 @@\n   }\n \n   modifier memebersOnly() {\n-    require(contains(msg.sender), \"Not a member\");\n+    /// RequireMutation(`contains(msg.sender)` |==> `false`) of: `require(contains(msg.sender), \"Not a member\");`\n+    require(false, \"Not a member\");\n     _;\n   }\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/d69fea7eb36148eea4d5f154cf713a3e?anonymousKey=0f522802d7c097011efbce2f84baab0b2773d333", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_13_002/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/d69fea7eb36148eea4d5f154cf713a3e?anonymousKey=0f522802d7c097011efbce2f84baab0b2773d333"}, {"gambit_mutant": {"filename": "gambit_out/mutants/18/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/18", "id": "18", "diff": "--- original\n+++ mutant\n@@ -94,7 +94,8 @@\n    */\n   function deposit() memebersOnly() external payable {\n     Member storage memberData = members[msg.sender];\n-    memberData.balance += msg.value;\n+    /// DeleteExpressionMutation(`memberData.balance += msg.value` |==> `assert(true)`) of: `memberData.balance += msg.value;`\n+    assert(true);\n   }\n \n   /**\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/fa71553aba0447a2b280301ef52a5ee3?anonymousKey=18048791ed468cb4a9ba2d0b3cd1335c892cc941", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_19_493/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/fa71553aba0447a2b280301ef52a5ee3?anonymousKey=18048791ed468cb4a9ba2d0b3cd1335c892cc941"}, {"gambit_mutant": {"filename": "gambit_out/mutants/19/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/19", "id": "19", "diff": "--- original\n+++ mutant\n@@ -94,7 +94,8 @@\n    */\n   function deposit() memebersOnly() external payable {\n     Member storage memberData = members[msg.sender];\n-    memberData.balance += msg.value;\n+    /// AssignmentMutation(`msg.value` |==> `0`) of: `memberData.balance += msg.value;`\n+    memberData.balance += 0;\n   }\n \n   /**\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/012c7daefe924313866eb10f8abe9d38?anonymousKey=ba25f7c3ff956089bfdb899536982b105c840d86", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_177/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/012c7daefe924313866eb10f8abe9d38?anonymousKey=ba25f7c3ff956089bfdb899536982b105c840d86"}, {"gambit_mutant": {"filename": "gambit_out/mutants/20/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/20", "id": "20", "diff": "--- original\n+++ mutant\n@@ -94,7 +94,8 @@\n    */\n   function deposit() memebersOnly() external payable {\n     Member storage memberData = members[msg.sender];\n-    memberData.balance += msg.value;\n+    /// AssignmentMutation(`msg.value` |==> `1`) of: `memberData.balance += msg.value;`\n+    memberData.balance += 1;\n   }\n \n   /**\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5402c8f2fd0e49d5bc6093a0832038e4?anonymousKey=11745d21c2ad0cf369a3aeb3aac83c9d13293226", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_14_658/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5402c8f2fd0e49d5bc6093a0832038e4?anonymousKey=11745d21c2ad0cf369a3aeb3aac83c9d13293226"}, {"gambit_mutant": {"filename": "gambit_out/mutants/21/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/21", "id": "21", "diff": "--- original\n+++ mutant\n@@ -101,7 +101,8 @@\n    * @return the child's parent\n    */\n   function getParent(address child) memebersOnly() public view returns (address) {\n-    require(contains(child), \"Not a member\");\n+    /// DeleteExpressionMutation(`require(contains(child), \"Not a member\")` |==> `assert(true)`) of: `require(contains(child), \"Not a member\");`\n+    assert(true);\n     return members[child].parent;\n   }\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/939834db60a045308a774081a3639289?anonymousKey=89f87fceb45cfb8513467aa16ded119d0aad05c9", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_20_154/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/939834db60a045308a774081a3639289?anonymousKey=89f87fceb45cfb8513467aa16ded119d0aad05c9"}, {"gambit_mutant": {"filename": "gambit_out/mutants/22/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/22", "id": "22", "diff": "--- original\n+++ mutant\n@@ -101,7 +101,8 @@\n    * @return the child's parent\n    */\n   function getParent(address child) memebersOnly() public view returns (address) {\n-    require(contains(child), \"Not a member\");\n+    /// RequireMutation(`contains(child)` |==> `true`) of: `require(contains(child), \"Not a member\");`\n+    require(true, \"Not a member\");\n     return members[child].parent;\n   }\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/3226310bb2d84a21b01acebfc2859171?anonymousKey=41ff1b7847d0923ce08822bbcdf2923dad40da52", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_07_177/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/3226310bb2d84a21b01acebfc2859171?anonymousKey=41ff1b7847d0923ce08822bbcdf2923dad40da52"}, {"gambit_mutant": {"filename": "gambit_out/mutants/23/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/23", "id": "23", "diff": "--- original\n+++ mutant\n@@ -101,7 +101,8 @@\n    * @return the child's parent\n    */\n   function getParent(address child) memebersOnly() public view returns (address) {\n-    require(contains(child), \"Not a member\");\n+    /// RequireMutation(`contains(child)` |==> `false`) of: `require(contains(child), \"Not a member\");`\n+    require(false, \"Not a member\");\n     return members[child].parent;\n   }\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/09ce0b8d762940d48ad76c324c558930?anonymousKey=4920fec64c09deeaef6a53976fd5a5e578787744", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_14_486/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/09ce0b8d762940d48ad76c324c558930?anonymousKey=4920fec64c09deeaef6a53976fd5a5e578787744"}, {"gambit_mutant": {"filename": "gambit_out/mutants/24/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/24", "id": "24", "diff": "--- original\n+++ mutant\n@@ -113,7 +113,8 @@\n     address parent,\n     bool isRight\n   ) memebersOnly() public view returns (address) {\n-    require(contains(parent), \"Not a member\");\n+    /// DeleteExpressionMutation(`require(contains(parent), \"Not a member\")` |==> `assert(true)`) of: `require(contains(parent), \"Not a member\");`\n+    assert(true);\n     Member storage memberData = members[parent];\n     if (isRight) {\n       return memberData.rightChild;\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/7bd4b81c705441cfa420a5672959a9b4?anonymousKey=4e5f79d255949a46969f2f47b61ce22f864cf0ee", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_20_525/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/7bd4b81c705441cfa420a5672959a9b4?anonymousKey=4e5f79d255949a46969f2f47b61ce22f864cf0ee"}, {"gambit_mutant": {"filename": "gambit_out/mutants/25/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/25", "id": "25", "diff": "--- original\n+++ mutant\n@@ -113,7 +113,8 @@\n     address parent,\n     bool isRight\n   ) memebersOnly() public view returns (address) {\n-    require(contains(parent), \"Not a member\");\n+    /// RequireMutation(`contains(parent)` |==> `true`) of: `require(contains(parent), \"Not a member\");`\n+    require(true, \"Not a member\");\n     Member storage memberData = members[parent];\n     if (isRight) {\n       return memberData.rightChild;\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/ed0047f8c9c44fc896569b2ebdea7bb8?anonymousKey=6e02dfaeac3a0dae1f2c50265aa0686e608ab45f", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_22_771/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/ed0047f8c9c44fc896569b2ebdea7bb8?anonymousKey=6e02dfaeac3a0dae1f2c50265aa0686e608ab45f"}, {"gambit_mutant": {"filename": "gambit_out/mutants/26/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/26", "id": "26", "diff": "--- original\n+++ mutant\n@@ -113,7 +113,8 @@\n     address parent,\n     bool isRight\n   ) memebersOnly() public view returns (address) {\n-    require(contains(parent), \"Not a member\");\n+    /// RequireMutation(`contains(parent)` |==> `false`) of: `require(contains(parent), \"Not a member\");`\n+    require(false, \"Not a member\");\n     Member storage memberData = members[parent];\n     if (isRight) {\n       return memberData.rightChild;\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/90045314507745beaf32a0dfeebcb3f6?anonymousKey=93b1fe468d6726ef9b38d42890a131d192ab0a7c", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_27_603/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/90045314507745beaf32a0dfeebcb3f6?anonymousKey=93b1fe468d6726ef9b38d42890a131d192ab0a7c"}, {"gambit_mutant": {"filename": "gambit_out/mutants/27/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/27", "id": "27", "diff": "--- original\n+++ mutant\n@@ -115,7 +115,8 @@\n   ) memebersOnly() public view returns (address) {\n     require(contains(parent), \"Not a member\");\n     Member storage memberData = members[parent];\n-    if (isRight) {\n+    /// IfStatementMutation(`isRight` |==> `true`) of: `if (isRight) {`\n+    if (true) {\n       return memberData.rightChild;\n     } else {\n       return memberData.leftChild;\n", "description": "IfStatementMutation"}, "link": "https://prover.certora.com/jobStatus/98279/af622dd71edf4ce6ab021a43f6199f9d?anonymousKey=2573566ce39a0dd2520d3174743921758502c23e", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_33_347/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/af622dd71edf4ce6ab021a43f6199f9d?anonymousKey=2573566ce39a0dd2520d3174743921758502c23e"}, {"gambit_mutant": {"filename": "gambit_out/mutants/28/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/28", "id": "28", "diff": "--- original\n+++ mutant\n@@ -115,7 +115,8 @@\n   ) memebersOnly() public view returns (address) {\n     require(contains(parent), \"Not a member\");\n     Member storage memberData = members[parent];\n-    if (isRight) {\n+    /// IfStatementMutation(`isRight` |==> `false`) of: `if (isRight) {`\n+    if (false) {\n       return memberData.rightChild;\n     } else {\n       return memberData.leftChild;\n", "description": "IfStatementMutation"}, "link": "https://prover.certora.com/jobStatus/98279/2bbd88b65ea24cf7aa54cd8e127365e3?anonymousKey=8eaefda530998f68c000849efcaebf483ed6d98a", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_23_019/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/2bbd88b65ea24cf7aa54cd8e127365e3?anonymousKey=8eaefda530998f68c000849efcaebf483ed6d98a"}, {"gambit_mutant": {"filename": "gambit_out/mutants/29/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/29", "id": "29", "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n     Member storage memberData = members[msg.sender];\n \n     // If there is no parent than the parent part is zero\n-    uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n+    /// BinaryOpMutation(`/` |==> `+`) of: `uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;`\n+    uint256 parentPart = contains(memberData.parent) ? amount+parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/90a8fcbe63e345a09dc5d3a964cdbfc2?anonymousKey=0901b907766cd470aacb628c6c20339301b013eb", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_27_739/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/90a8fcbe63e345a09dc5d3a964cdbfc2?anonymousKey=0901b907766cd470aacb628c6c20339301b013eb"}, {"gambit_mutant": {"filename": "gambit_out/mutants/30/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/30", "id": "30", "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n     Member storage memberData = members[msg.sender];\n \n     // If there is no parent than the parent part is zero\n-    uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n+    /// BinaryOpMutation(`/` |==> `-`) of: `uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;`\n+    uint256 parentPart = contains(memberData.parent) ? amount-parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/fdab8acbb74a4afd9f9b9bcc345d8f3a?anonymousKey=e00fdbcd59740fea9cec1896e1a6f31a88bbdd67", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_34_738/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/fdab8acbb74a4afd9f9b9bcc345d8f3a?anonymousKey=e00fdbcd59740fea9cec1896e1a6f31a88bbdd67"}, {"gambit_mutant": {"filename": "gambit_out/mutants/31/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/31", "id": "31", "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n     Member storage memberData = members[msg.sender];\n \n     // If there is no parent than the parent part is zero\n-    uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n+    /// BinaryOpMutation(`/` |==> `*`) of: `uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;`\n+    uint256 parentPart = contains(memberData.parent) ? amount*parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5f3b2add72b74fc296f15fd434848594?anonymousKey=56883a98bb8edc7c60bd8496d17955d2cb1668c7", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_24_661/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5f3b2add72b74fc296f15fd434848594?anonymousKey=56883a98bb8edc7c60bd8496d17955d2cb1668c7"}, {"gambit_mutant": {"filename": "gambit_out/mutants/32/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/32", "id": "32", "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n     Member storage memberData = members[msg.sender];\n \n     // If there is no parent than the parent part is zero\n-    uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n+    /// BinaryOpMutation(`/` |==> `%`) of: `uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;`\n+    uint256 parentPart = contains(memberData.parent) ? amount%parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/ca6397e764c6434fac2cec2dd0f3920f?anonymousKey=c147daae1014453a897f216ad4dc40f8fd48d9fe", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_28_291/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/ca6397e764c6434fac2cec2dd0f3920f?anonymousKey=c147daae1014453a897f216ad4dc40f8fd48d9fe"}, {"gambit_mutant": {"filename": "gambit_out/mutants/33/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/33", "id": "33", "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n     Member storage memberData = members[msg.sender];\n \n     // If there is no parent than the parent part is zero\n-    uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n+    /// BinaryOpMutation(`/` |==> `**`) of: `uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;`\n+    uint256 parentPart = contains(memberData.parent) ? amount**parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5cee3fcb2aa94404877e166557692750?anonymousKey=bdb1b6df8e3ea0379e58d97cc5f932e740631114", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_34_390/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5cee3fcb2aa94404877e166557692750?anonymousKey=bdb1b6df8e3ea0379e58d97cc5f932e740631114"}, {"gambit_mutant": {"filename": "gambit_out/mutants/34/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/34", "id": "34", "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n     Member storage memberData = members[msg.sender];\n \n     // If there is no parent than the parent part is zero\n-    uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n+    /// SwapArgumentsOperatorMutation(`amount / parentFrac` |==> `parentFrac / amount`) of: `uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;`\n+    uint256 parentPart = contains(memberData.parent) ? parentFrac / amount : 0;\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n", "description": "SwapArgumentsOperatorMutation"}, "link": "https://prover.certora.com/jobStatus/98279/586fd94aca954faab2a0eb89c02412b8?anonymousKey=9f8f91b3c59e6b26158d4bf00471bd31879d4cfa", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_26_416/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/586fd94aca954faab2a0eb89c02412b8?anonymousKey=9f8f91b3c59e6b26158d4bf00471bd31879d4cfa"}, {"gambit_mutant": {"filename": "gambit_out/mutants/35/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/35", "id": "35", "diff": "--- original\n+++ mutant\n@@ -144,7 +144,8 @@\n \n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n-    uint256 totalRemove = amount + parentPart;\n+    /// BinaryOpMutation(`+` |==> `-`) of: `uint256 totalRemove = amount + parentPart;`\n+    uint256 totalRemove = amount-parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/6302871c7df04c9e9e162794065db19b?anonymousKey=3d81a85bb893de51aebb5e307fdf03adc9226898", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_31_866/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/6302871c7df04c9e9e162794065db19b?anonymousKey=3d81a85bb893de51aebb5e307fdf03adc9226898"}, {"gambit_mutant": {"filename": "gambit_out/mutants/36/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/36", "id": "36", "diff": "--- original\n+++ mutant\n@@ -144,7 +144,8 @@\n \n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n-    uint256 totalRemove = amount + parentPart;\n+    /// BinaryOpMutation(`+` |==> `*`) of: `uint256 totalRemove = amount + parentPart;`\n+    uint256 totalRemove = amount*parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/ee762b0c451c4785b9475207178fc756?anonymousKey=8148017f8722f1d8b53e414aa79cb5caafaf17e7", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_36_484/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/ee762b0c451c4785b9475207178fc756?anonymousKey=8148017f8722f1d8b53e414aa79cb5caafaf17e7"}, {"gambit_mutant": {"filename": "gambit_out/mutants/37/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/37", "id": "37", "diff": "--- original\n+++ mutant\n@@ -144,7 +144,8 @@\n \n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n-    uint256 totalRemove = amount + parentPart;\n+    /// BinaryOpMutation(`+` |==> `/`) of: `uint256 totalRemove = amount + parentPart;`\n+    uint256 totalRemove = amount/parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/339ec13b172e4c90a887f8c84b6a94af?anonymousKey=e77e3331a1383bd4ed3ed1793a90cd614c640eee", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_26_581/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/339ec13b172e4c90a887f8c84b6a94af?anonymousKey=e77e3331a1383bd4ed3ed1793a90cd614c640eee"}, {"gambit_mutant": {"filename": "gambit_out/mutants/38/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/38", "id": "38", "diff": "--- original\n+++ mutant\n@@ -144,7 +144,8 @@\n \n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n-    uint256 totalRemove = amount + parentPart;\n+    /// BinaryOpMutation(`+` |==> `%`) of: `uint256 totalRemove = amount + parentPart;`\n+    uint256 totalRemove = amount%parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/2c810245235e4b2eb6876e1ce545f717?anonymousKey=24acbc2a9cbebf726acc482c06896df73cef7e44", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_31_048/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/2c810245235e4b2eb6876e1ce545f717?anonymousKey=24acbc2a9cbebf726acc482c06896df73cef7e44"}, {"gambit_mutant": {"filename": "gambit_out/mutants/39/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/39", "id": "39", "diff": "--- original\n+++ mutant\n@@ -144,7 +144,8 @@\n \n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n-    uint256 totalRemove = amount + parentPart;\n+    /// BinaryOpMutation(`+` |==> `**`) of: `uint256 totalRemove = amount + parentPart;`\n+    uint256 totalRemove = amount**parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/98279/670f6ff8cada4f8ba56c7fe3b8ee00c2?anonymousKey=61cecb70b0b1761df3e58973850879f32b50adcd", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_37_553/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/670f6ff8cada4f8ba56c7fe3b8ee00c2?anonymousKey=61cecb70b0b1761df3e58973850879f32b50adcd"}, {"gambit_mutant": {"filename": "gambit_out/mutants/40/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/40", "id": "40", "diff": "--- original\n+++ mutant\n@@ -145,7 +145,8 @@\n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n-    require(memberData.balance >= totalRemove, \"Insufficient funds\");\n+    /// DeleteExpressionMutation(`require(memberData.balance >= totalRemove, \"Insufficient funds\")` |==> `assert(true)`) of: `require(memberData.balance >= totalRemove, \"Insufficient funds\");`\n+    assert(true);\n \n     memberData.balance -= totalRemove;\n     \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/85b660304b1b44fdbfa2e37a1dc5d8fb?anonymousKey=0b208d4e5a13f3835a45c3133c44aa75891ea135", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_26_130/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/85b660304b1b44fdbfa2e37a1dc5d8fb?anonymousKey=0b208d4e5a13f3835a45c3133c44aa75891ea135"}, {"gambit_mutant": {"filename": "gambit_out/mutants/41/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/41", "id": "41", "diff": "--- original\n+++ mutant\n@@ -145,7 +145,8 @@\n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n-    require(memberData.balance >= totalRemove, \"Insufficient funds\");\n+    /// RequireMutation(`memberData.balance >= totalRemove` |==> `true`) of: `require(memberData.balance >= totalRemove, \"Insufficient funds\");`\n+    require(true, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n     \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/cd6f88901e184b5693adee9209d4cdb8?anonymousKey=511eafc58492cc8e3b3164cb5d5541d12e8541cd", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_32_806/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/cd6f88901e184b5693adee9209d4cdb8?anonymousKey=511eafc58492cc8e3b3164cb5d5541d12e8541cd"}, {"gambit_mutant": {"filename": "gambit_out/mutants/42/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/42", "id": "42", "diff": "--- original\n+++ mutant\n@@ -145,7 +145,8 @@\n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n-    require(memberData.balance >= totalRemove, \"Insufficient funds\");\n+    /// RequireMutation(`memberData.balance >= totalRemove` |==> `false`) of: `require(memberData.balance >= totalRemove, \"Insufficient funds\");`\n+    require(false, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n     \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5e2854c587314d77bfd93d0fc09beac6?anonymousKey=5b4c7fcbb7f26edf2f1581c8fc86408728779ba8", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_37_240/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5e2854c587314d77bfd93d0fc09beac6?anonymousKey=5b4c7fcbb7f26edf2f1581c8fc86408728779ba8"}, {"gambit_mutant": {"filename": "gambit_out/mutants/43/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/43", "id": "43", "diff": "--- original\n+++ mutant\n@@ -145,7 +145,8 @@\n     // If there is no parent than the parent part is zero\n     uint256 parentPart = contains(memberData.parent) ? amount / parentFrac : 0;\n     uint256 totalRemove = amount + parentPart;\n-    require(memberData.balance >= totalRemove, \"Insufficient funds\");\n+    /// SwapArgumentsOperatorMutation(`memberData.balance >= totalRemove` |==> `totalRemove >= memberData.balance`) of: `require(memberData.balance >= totalRemove, \"Insufficient funds\");`\n+    require(totalRemove >= memberData.balance, \"Insufficient funds\");\n \n     memberData.balance -= totalRemove;\n     \n", "description": "SwapArgumentsOperatorMutation"}, "link": "https://prover.certora.com/jobStatus/98279/c759a4e5e72d4c53bd6b75c02b1d6ed1?anonymousKey=b2b7e2b82e16e861a554e778b2ccd49b7bceb378", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_26_733/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/c759a4e5e72d4c53bd6b75c02b1d6ed1?anonymousKey=b2b7e2b82e16e861a554e778b2ccd49b7bceb378"}, {"gambit_mutant": {"filename": "gambit_out/mutants/44/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/44", "id": "44", "diff": "--- original\n+++ mutant\n@@ -147,7 +147,8 @@\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n-    memberData.balance -= totalRemove;\n+    /// DeleteExpressionMutation(`memberData.balance -= totalRemove` |==> `assert(true)`) of: `memberData.balance -= totalRemove;`\n+    assert(true);\n     \n     // Send parent part\n     members[memberData.parent].balance += parentPart;\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/256c3222ac1e4a1f9b2afe735f455b11?anonymousKey=1d9e10720a4a0f4a7c0a97e329c0cb16ee27c352", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_32_056/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/256c3222ac1e4a1f9b2afe735f455b11?anonymousKey=1d9e10720a4a0f4a7c0a97e329c0cb16ee27c352"}, {"gambit_mutant": {"filename": "gambit_out/mutants/45/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/45", "id": "45", "diff": "--- original\n+++ mutant\n@@ -147,7 +147,8 @@\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n-    memberData.balance -= totalRemove;\n+    /// AssignmentMutation(`totalRemove` |==> `0`) of: `memberData.balance -= totalRemove;`\n+    memberData.balance -= 0;\n     \n     // Send parent part\n     members[memberData.parent].balance += parentPart;\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/1179c6bebd344ee38548e0b6efbbf483?anonymousKey=5ee58a05e945efa22935039d18d2c50202e0e7fb", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_38_225/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/1179c6bebd344ee38548e0b6efbbf483?anonymousKey=5ee58a05e945efa22935039d18d2c50202e0e7fb"}, {"gambit_mutant": {"filename": "gambit_out/mutants/46/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/46", "id": "46", "diff": "--- original\n+++ mutant\n@@ -147,7 +147,8 @@\n     uint256 totalRemove = amount + parentPart;\n     require(memberData.balance >= totalRemove, \"Insufficient funds\");\n \n-    memberData.balance -= totalRemove;\n+    /// AssignmentMutation(`totalRemove` |==> `1`) of: `memberData.balance -= totalRemove;`\n+    memberData.balance -= 1;\n     \n     // Send parent part\n     members[memberData.parent].balance += parentPart;\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/3c1b99485fd34bf4b481d8341069a74c?anonymousKey=f773fa1ad605430296f4fb28a9fef14f8bc299d4", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_26_319/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/3c1b99485fd34bf4b481d8341069a74c?anonymousKey=f773fa1ad605430296f4fb28a9fef14f8bc299d4"}, {"gambit_mutant": {"filename": "gambit_out/mutants/47/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/47", "id": "47", "diff": "--- original\n+++ mutant\n@@ -150,7 +150,8 @@\n     memberData.balance -= totalRemove;\n     \n     // Send parent part\n-    members[memberData.parent].balance += parentPart;\n+    /// DeleteExpressionMutation(`members[memberData.parent].balance += parentPart` |==> `assert(true)`) of: `members[memberData.parent].balance += parentPart;`\n+    assert(true);\n     \n     // Send member's payment\n     (bool success, ) = msg.sender.call{value: amount}(\"\");\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/7c24a495e78e480ea115bebb587e60d2?anonymousKey=b0d99ae1f56ef0afca2e54aa4e59becd63b88991", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_32_514/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/7c24a495e78e480ea115bebb587e60d2?anonymousKey=b0d99ae1f56ef0afca2e54aa4e59becd63b88991"}, {"gambit_mutant": {"filename": "gambit_out/mutants/48/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/48", "id": "48", "diff": "--- original\n+++ mutant\n@@ -150,7 +150,8 @@\n     memberData.balance -= totalRemove;\n     \n     // Send parent part\n-    members[memberData.parent].balance += parentPart;\n+    /// AssignmentMutation(`parentPart` |==> `0`) of: `members[memberData.parent].balance += parentPart;`\n+    members[memberData.parent].balance += 0;\n     \n     // Send member's payment\n     (bool success, ) = msg.sender.call{value: amount}(\"\");\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/bf87c6cf2f4b49ac892ac760e5e81f4c?anonymousKey=1de557b0a7942fb58610025e9f7c39fbcac99b30", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_38_957/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/bf87c6cf2f4b49ac892ac760e5e81f4c?anonymousKey=1de557b0a7942fb58610025e9f7c39fbcac99b30"}, {"gambit_mutant": {"filename": "gambit_out/mutants/49/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/49", "id": "49", "diff": "--- original\n+++ mutant\n@@ -150,7 +150,8 @@\n     memberData.balance -= totalRemove;\n     \n     // Send parent part\n-    members[memberData.parent].balance += parentPart;\n+    /// AssignmentMutation(`parentPart` |==> `1`) of: `members[memberData.parent].balance += parentPart;`\n+    members[memberData.parent].balance += 1;\n     \n     // Send member's payment\n     (bool success, ) = msg.sender.call{value: amount}(\"\");\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/6e2dda5b26b445998855c8e0d22d52c1?anonymousKey=0b8576a4d37a69d5fe4d2f8d41e3a1f839fcdd32", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_39_089/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/6e2dda5b26b445998855c8e0d22d52c1?anonymousKey=0b8576a4d37a69d5fe4d2f8d41e3a1f839fcdd32"}, {"gambit_mutant": {"filename": "gambit_out/mutants/50/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/50", "id": "50", "diff": "--- original\n+++ mutant\n@@ -154,7 +154,8 @@\n     \n     // Send member's payment\n     (bool success, ) = msg.sender.call{value: amount}(\"\");\n-    require(success);\n+    /// DeleteExpressionMutation(`require(success)` |==> `assert(true)`) of: `require(success);`\n+    assert(true);\n   }\n \n   /**\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/e8aefe63ec1d4d3e9f74c845621c5083?anonymousKey=5a156ab7aad4ddeb8a3ab8fe296c7ad04b5554f2", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_46_574/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/e8aefe63ec1d4d3e9f74c845621c5083?anonymousKey=5a156ab7aad4ddeb8a3ab8fe296c7ad04b5554f2"}, {"gambit_mutant": {"filename": "gambit_out/mutants/51/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/51", "id": "51", "diff": "--- original\n+++ mutant\n@@ -154,7 +154,8 @@\n     \n     // Send member's payment\n     (bool success, ) = msg.sender.call{value: amount}(\"\");\n-    require(success);\n+    /// RequireMutation(`success` |==> `true`) of: `require(success);`\n+    require(true);\n   }\n \n   /**\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/2476793ba8564ab981abc88afdfe1fe7?anonymousKey=eed25588856e8a74dc75d90d4d0183c2ba2a80ec", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_52_596/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/2476793ba8564ab981abc88afdfe1fe7?anonymousKey=eed25588856e8a74dc75d90d4d0183c2ba2a80ec"}, {"gambit_mutant": {"filename": "gambit_out/mutants/52/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/52", "id": "52", "diff": "--- original\n+++ mutant\n@@ -154,7 +154,8 @@\n     \n     // Send member's payment\n     (bool success, ) = msg.sender.call{value: amount}(\"\");\n-    require(success);\n+    /// RequireMutation(`success` |==> `false`) of: `require(success);`\n+    require(false);\n   }\n \n   /**\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/8b3d061c02284e7eb474ad986a7b9893?anonymousKey=1cef33f7f3668b403cfb895a6766e08920e5ad2c", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_40_926/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/8b3d061c02284e7eb474ad986a7b9893?anonymousKey=1cef33f7f3668b403cfb895a6766e08920e5ad2c"}, {"gambit_mutant": {"filename": "gambit_out/mutants/53/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/53", "id": "53", "diff": "--- original\n+++ mutant\n@@ -166,7 +166,8 @@\n    * scheme\n    */\n   function join(address child, bool isRight) memebersOnly() public {\n-    require(!hasChild(msg.sender, isRight), \"Child already exists\");\n+    /// DeleteExpressionMutation(`require(!hasChild(msg.sender, isRight), \"Child already exists\")` |==> `assert(true)`) of: `require(!hasChild(msg.sender, isRight), \"Child already exists\");`\n+    assert(true);\n     require(!contains(child), \"Child already a member\");\n     require(child != address(0), \"Address zero cannot be a member\");\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/72a229daee094fa8828ed6cb954d200d?anonymousKey=238f8257ca31ec8ccb36d2b9d37731fd3ef4eec8", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_46_050/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/72a229daee094fa8828ed6cb954d200d?anonymousKey=238f8257ca31ec8ccb36d2b9d37731fd3ef4eec8"}, {"gambit_mutant": {"filename": "gambit_out/mutants/54/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/54", "id": "54", "diff": "--- original\n+++ mutant\n@@ -166,7 +166,8 @@\n    * scheme\n    */\n   function join(address child, bool isRight) memebersOnly() public {\n-    require(!hasChild(msg.sender, isRight), \"Child already exists\");\n+    /// RequireMutation(`!hasChild(msg.sender, isRight)` |==> `true`) of: `require(!hasChild(msg.sender, isRight), \"Child already exists\");`\n+    require(true, \"Child already exists\");\n     require(!contains(child), \"Child already a member\");\n     require(child != address(0), \"Address zero cannot be a member\");\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/8c3b42b487b043deacaa86ed6d133f07?anonymousKey=8ba559c10c234b1ff8623af477a49cc2a1a5ced5", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_52_768/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/8c3b42b487b043deacaa86ed6d133f07?anonymousKey=8ba559c10c234b1ff8623af477a49cc2a1a5ced5"}, {"gambit_mutant": {"filename": "gambit_out/mutants/55/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/55", "id": "55", "diff": "--- original\n+++ mutant\n@@ -166,7 +166,8 @@\n    * scheme\n    */\n   function join(address child, bool isRight) memebersOnly() public {\n-    require(!hasChild(msg.sender, isRight), \"Child already exists\");\n+    /// RequireMutation(`!hasChild(msg.sender, isRight)` |==> `false`) of: `require(!hasChild(msg.sender, isRight), \"Child already exists\");`\n+    require(false, \"Child already exists\");\n     require(!contains(child), \"Child already a member\");\n     require(child != address(0), \"Address zero cannot be a member\");\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/f76425fbcca94c79b26fd6a0f83221ed?anonymousKey=029548f6f4be8c2748223eb4868118e4f93feeb7", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_41_067/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/f76425fbcca94c79b26fd6a0f83221ed?anonymousKey=029548f6f4be8c2748223eb4868118e4f93feeb7"}, {"gambit_mutant": {"filename": "gambit_out/mutants/56/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/56", "id": "56", "diff": "--- original\n+++ mutant\n@@ -167,7 +167,8 @@\n    */\n   function join(address child, bool isRight) memebersOnly() public {\n     require(!hasChild(msg.sender, isRight), \"Child already exists\");\n-    require(!contains(child), \"Child already a member\");\n+    /// DeleteExpressionMutation(`require(!contains(child), \"Child already a member\")` |==> `assert(true)`) of: `require(!contains(child), \"Child already a member\");`\n+    assert(true);\n     require(child != address(0), \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5042d9d448d24f83b766723497cb3f4f?anonymousKey=660510013b97160ba7827dde72ad75156679eaf2", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_47_215/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5042d9d448d24f83b766723497cb3f4f?anonymousKey=660510013b97160ba7827dde72ad75156679eaf2"}, {"gambit_mutant": {"filename": "gambit_out/mutants/57/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/57", "id": "57", "diff": "--- original\n+++ mutant\n@@ -167,7 +167,8 @@\n    */\n   function join(address child, bool isRight) memebersOnly() public {\n     require(!hasChild(msg.sender, isRight), \"Child already exists\");\n-    require(!contains(child), \"Child already a member\");\n+    /// RequireMutation(`!contains(child)` |==> `true`) of: `require(!contains(child), \"Child already a member\");`\n+    require(true, \"Child already a member\");\n     require(child != address(0), \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/771c2b107b044267977ba14db70c5bb1?anonymousKey=42fcbd415b311c3bb3fb1ad4228cba55eccad02d", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_53_565/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/771c2b107b044267977ba14db70c5bb1?anonymousKey=42fcbd415b311c3bb3fb1ad4228cba55eccad02d"}, {"gambit_mutant": {"filename": "gambit_out/mutants/58/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/58", "id": "58", "diff": "--- original\n+++ mutant\n@@ -167,7 +167,8 @@\n    */\n   function join(address child, bool isRight) memebersOnly() public {\n     require(!hasChild(msg.sender, isRight), \"Child already exists\");\n-    require(!contains(child), \"Child already a member\");\n+    /// RequireMutation(`!contains(child)` |==> `false`) of: `require(!contains(child), \"Child already a member\");`\n+    require(false, \"Child already a member\");\n     require(child != address(0), \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5c76ce5d29b14be6a2ef69e6735935f8?anonymousKey=a0eb29112945986234e3a28fe58d67775cfca451", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_42_781/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5c76ce5d29b14be6a2ef69e6735935f8?anonymousKey=a0eb29112945986234e3a28fe58d67775cfca451"}, {"gambit_mutant": {"filename": "gambit_out/mutants/59/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/59", "id": "59", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n   function join(address child, bool isRight) memebersOnly() public {\n     require(!hasChild(msg.sender, isRight), \"Child already exists\");\n     require(!contains(child), \"Child already a member\");\n-    require(child != address(0), \"Address zero cannot be a member\");\n+    /// DeleteExpressionMutation(`require(child != address(0), \"Address zero cannot be a member\")` |==> `assert(true)`) of: `require(child != address(0), \"Address zero cannot be a member\");`\n+    assert(true);\n \n     Member storage memberData = members[msg.sender];\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/5b298f6fd67c4c30a4035aa5bd485d3d?anonymousKey=c48ebe03c38fff1e75a18c51ed71a5694f7e6db7", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_48_534/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/5b298f6fd67c4c30a4035aa5bd485d3d?anonymousKey=c48ebe03c38fff1e75a18c51ed71a5694f7e6db7"}, {"gambit_mutant": {"filename": "gambit_out/mutants/60/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/60", "id": "60", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n   function join(address child, bool isRight) memebersOnly() public {\n     require(!hasChild(msg.sender, isRight), \"Child already exists\");\n     require(!contains(child), \"Child already a member\");\n-    require(child != address(0), \"Address zero cannot be a member\");\n+    /// RequireMutation(`child != address(0)` |==> `true`) of: `require(child != address(0), \"Address zero cannot be a member\");`\n+    require(true, \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/a03e92d99e37450eb314205041a5af5c?anonymousKey=490b4c1ee3646f9126218671cbddcb06b276280b", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_54_636/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/a03e92d99e37450eb314205041a5af5c?anonymousKey=490b4c1ee3646f9126218671cbddcb06b276280b"}, {"gambit_mutant": {"filename": "gambit_out/mutants/61/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/61", "id": "61", "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n   function join(address child, bool isRight) memebersOnly() public {\n     require(!hasChild(msg.sender, isRight), \"Child already exists\");\n     require(!contains(child), \"Child already a member\");\n-    require(child != address(0), \"Address zero cannot be a member\");\n+    /// RequireMutation(`child != address(0)` |==> `false`) of: `require(child != address(0), \"Address zero cannot be a member\");`\n+    require(false, \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/4bc813a14f324234ba2fa8e4e00debb6?anonymousKey=42d273a8f6fe35dc508220d148a39a9a0214384b", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_43_317/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/4bc813a14f324234ba2fa8e4e00debb6?anonymousKey=42d273a8f6fe35dc508220d148a39a9a0214384b"}, {"gambit_mutant": {"filename": "gambit_out/mutants/62/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/62", "id": "62", "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n     require(child != address(0), \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n-    require(memberData.balance >= joiningFee, \"Insufficient funds\");\n+    /// DeleteExpressionMutation(`require(memberData.balance >= joiningFee, \"Insufficient funds\")` |==> `assert(true)`) of: `require(memberData.balance >= joiningFee, \"Insufficient funds\");`\n+    assert(true);\n     memberData.balance -= joiningFee;\n \n     members[child].exists = true; // Make child a member\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/4e093e1d7b4142a99ef1f5f08900f0ee?anonymousKey=703d87eaf774b8aa04fcebd81b3fdc8a7ce7057b", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_49_689/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/4e093e1d7b4142a99ef1f5f08900f0ee?anonymousKey=703d87eaf774b8aa04fcebd81b3fdc8a7ce7057b"}, {"gambit_mutant": {"filename": "gambit_out/mutants/63/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/63", "id": "63", "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n     require(child != address(0), \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n-    require(memberData.balance >= joiningFee, \"Insufficient funds\");\n+    /// RequireMutation(`memberData.balance >= joiningFee` |==> `true`) of: `require(memberData.balance >= joiningFee, \"Insufficient funds\");`\n+    require(true, \"Insufficient funds\");\n     memberData.balance -= joiningFee;\n \n     members[child].exists = true; // Make child a member\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/167876d29055421785bce7a48708ebf7?anonymousKey=2920bbb3cc62f18f1b238d10846d84bce560fec1", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_54_451/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/167876d29055421785bce7a48708ebf7?anonymousKey=2920bbb3cc62f18f1b238d10846d84bce560fec1"}, {"gambit_mutant": {"filename": "gambit_out/mutants/64/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/64", "id": "64", "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n     require(child != address(0), \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n-    require(memberData.balance >= joiningFee, \"Insufficient funds\");\n+    /// RequireMutation(`memberData.balance >= joiningFee` |==> `false`) of: `require(memberData.balance >= joiningFee, \"Insufficient funds\");`\n+    require(false, \"Insufficient funds\");\n     memberData.balance -= joiningFee;\n \n     members[child].exists = true; // Make child a member\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/98279/89e050369b344ec08edba1ecd4a50d38?anonymousKey=3bf94fdb85a8d3b316ac0020495b77793ea2bf8e", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_44_550/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/89e050369b344ec08edba1ecd4a50d38?anonymousKey=3bf94fdb85a8d3b316ac0020495b77793ea2bf8e"}, {"gambit_mutant": {"filename": "gambit_out/mutants/65/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/65", "id": "65", "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n     require(child != address(0), \"Address zero cannot be a member\");\n \n     Member storage memberData = members[msg.sender];\n-    require(memberData.balance >= joiningFee, \"Insufficient funds\");\n+    /// SwapArgumentsOperatorMutation(`memberData.balance >= joiningFee` |==> `joiningFee >= memberData.balance`) of: `require(memberData.balance >= joiningFee, \"Insufficient funds\");`\n+    require(joiningFee >= memberData.balance, \"Insufficient funds\");\n     memberData.balance -= joiningFee;\n \n     members[child].exists = true; // Make child a member\n", "description": "SwapArgumentsOperatorMutation"}, "link": "https://prover.certora.com/jobStatus/98279/e51da490580042febb90590fb1087809?anonymousKey=dd5090d3e39f57afcdf9567da31a5ae52c168ac9", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_50_083/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/e51da490580042febb90590fb1087809?anonymousKey=dd5090d3e39f57afcdf9567da31a5ae52c168ac9"}, {"gambit_mutant": {"filename": "gambit_out/mutants/66/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/66", "id": "66", "diff": "--- original\n+++ mutant\n@@ -172,7 +172,8 @@\n \n     Member storage memberData = members[msg.sender];\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n-    memberData.balance -= joiningFee;\n+    /// DeleteExpressionMutation(`memberData.balance -= joiningFee` |==> `assert(true)`) of: `memberData.balance -= joiningFee;`\n+    assert(true);\n \n     members[child].exists = true; // Make child a member\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/4df7a30c804e41fbafd9b8860c4342f5?anonymousKey=142e97af4b04f541f98686c8634d608f7662cf76", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_55_737/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/4df7a30c804e41fbafd9b8860c4342f5?anonymousKey=142e97af4b04f541f98686c8634d608f7662cf76"}, {"gambit_mutant": {"filename": "gambit_out/mutants/67/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/67", "id": "67", "diff": "--- original\n+++ mutant\n@@ -172,7 +172,8 @@\n \n     Member storage memberData = members[msg.sender];\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n-    memberData.balance -= joiningFee;\n+    /// AssignmentMutation(`joiningFee` |==> `0`) of: `memberData.balance -= joiningFee;`\n+    memberData.balance -= 0;\n \n     members[child].exists = true; // Make child a member\n \n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/a7c8f46134d74adc9e14a2f3143d19fb?anonymousKey=9c158ea70d3a6ac67260fdab6e07d27808beb5b3", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_44_425/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/a7c8f46134d74adc9e14a2f3143d19fb?anonymousKey=9c158ea70d3a6ac67260fdab6e07d27808beb5b3"}, {"gambit_mutant": {"filename": "gambit_out/mutants/68/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/68", "id": "68", "diff": "--- original\n+++ mutant\n@@ -172,7 +172,8 @@\n \n     Member storage memberData = members[msg.sender];\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n-    memberData.balance -= joiningFee;\n+    /// AssignmentMutation(`joiningFee` |==> `1`) of: `memberData.balance -= joiningFee;`\n+    memberData.balance -= 1;\n \n     members[child].exists = true; // Make child a member\n \n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/dd62d3b8231f41a0891b60483a79c641?anonymousKey=f01af5b4bf551a33b9dab14bd6b19d4f906ce979", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_50_094/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/dd62d3b8231f41a0891b60483a79c641?anonymousKey=f01af5b4bf551a33b9dab14bd6b19d4f906ce979"}, {"gambit_mutant": {"filename": "gambit_out/mutants/69/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/69", "id": "69", "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n     memberData.balance -= joiningFee;\n \n-    members[child].exists = true; // Make child a member\n+    /// DeleteExpressionMutation(`members[child].exists = true` |==> `assert(true)`) of: `members[child].exists = true; // Make child a member`\n+    assert(true); // Make child a member\n \n     // Add child\n     if (isRight) {\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/b57073f403de44a1aa039fab8ab4253d?anonymousKey=aa9a73df13a5fcd8d997cc8aed00bbf568ae9fb9", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_56_668/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/b57073f403de44a1aa039fab8ab4253d?anonymousKey=aa9a73df13a5fcd8d997cc8aed00bbf568ae9fb9"}, {"gambit_mutant": {"filename": "gambit_out/mutants/70/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/70", "id": "70", "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n     require(memberData.balance >= joiningFee, \"Insufficient funds\");\n     memberData.balance -= joiningFee;\n \n-    members[child].exists = true; // Make child a member\n+    /// AssignmentMutation(`true` |==> `false`) of: `members[child].exists = true; // Make child a member`\n+    members[child].exists = false; // Make child a member\n \n     // Add child\n     if (isRight) {\n", "description": "AssignmentMutation"}, "link": "https://prover.certora.com/jobStatus/98279/c04289ef456a4efcbb82410b7762baf2?anonymousKey=68dff66220e31bc47f484d8835eec1d3fbcec025", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_45_120/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/c04289ef456a4efcbb82410b7762baf2?anonymousKey=68dff66220e31bc47f484d8835eec1d3fbcec025"}, {"gambit_mutant": {"filename": "gambit_out/mutants/71/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/71", "id": "71", "diff": "--- original\n+++ mutant\n@@ -177,7 +177,8 @@\n     members[child].exists = true; // Make child a member\n \n     // Add child\n-    if (isRight) {\n+    /// IfStatementMutation(`isRight` |==> `true`) of: `if (isRight) {`\n+    if (true) {\n       memberData.rightChild = child;\n     } else {\n       memberData.leftChild = child;\n", "description": "IfStatementMutation"}, "link": "https://prover.certora.com/jobStatus/98279/6545d97aec854052b1a3c1ab71183d1f?anonymousKey=f5337b48201e902f8b485fe13cb0f6ceaf4d231a", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_51_360/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/6545d97aec854052b1a3c1ab71183d1f?anonymousKey=f5337b48201e902f8b485fe13cb0f6ceaf4d231a"}, {"gambit_mutant": {"filename": "gambit_out/mutants/72/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/72", "id": "72", "diff": "--- original\n+++ mutant\n@@ -177,7 +177,8 @@\n     members[child].exists = true; // Make child a member\n \n     // Add child\n-    if (isRight) {\n+    /// IfStatementMutation(`isRight` |==> `false`) of: `if (isRight) {`\n+    if (false) {\n       memberData.rightChild = child;\n     } else {\n       memberData.leftChild = child;\n", "description": "IfStatementMutation"}, "link": "https://prover.certora.com/jobStatus/98279/96de9a20c1894034aafb8d26efbcbfab?anonymousKey=0f935fc63cd2f4ef6028e1d5a1807265c5769d43", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_57_433/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/96de9a20c1894034aafb8d26efbcbfab?anonymousKey=0f935fc63cd2f4ef6028e1d5a1807265c5769d43"}, {"gambit_mutant": {"filename": "gambit_out/mutants/73/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/73", "id": "73", "diff": "--- original\n+++ mutant\n@@ -180,7 +180,8 @@\n     if (isRight) {\n       memberData.rightChild = child;\n     } else {\n-      memberData.leftChild = child;\n+      /// DeleteExpressionMutation(`memberData.leftChild = child` |==> `assert(true)`) of: `memberData.leftChild = child;`\n+      assert(true);\n     }\n   }\n }\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/82d6a3a1dd794335a11e7841f623f979?anonymousKey=fda8fa503ecc3da498361474d06c3dc85834dc7e", "success": true, "run_directory": ".certora_internal/23_11_13_17_40_58_905/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/82d6a3a1dd794335a11e7841f623f979?anonymousKey=fda8fa503ecc3da498361474d06c3dc85834dc7e"}, {"gambit_mutant": {"filename": "gambit_out/mutants/74/Pyramid.sol", "original_filename": "Pyramid.sol", "directory": "gambit_out/mutants/74", "id": "74", "diff": "--- original\n+++ mutant\n@@ -178,7 +178,8 @@\n \n     // Add child\n     if (isRight) {\n-      memberData.rightChild = child;\n+      /// DeleteExpressionMutation(`memberData.rightChild = child` |==> `assert(true)`) of: `memberData.rightChild = child;`\n+      assert(true);\n     } else {\n       memberData.leftChild = child;\n     }\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/98279/0dd0ee7e8af84537af7e1a4cb7c35512?anonymousKey=bdf425eddddee1f0ca8817745425043982f61c62", "success": true, "run_directory": ".certora_internal/23_11_13_17_41_02_192/.certora_sources", "rule_report_link": "https://prover.certora.com/output/98279/0dd0ee7e8af84537af7e1a4cb7c35512?anonymousKey=bdf425eddddee1f0ca8817745425043982f61c62"}]}